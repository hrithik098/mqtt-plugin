import React, { PureComponent } from 'react';
import { Threshold, ThresholdsConfig, ThresholdsMode, SelectableValue } from '@grafana/data';
export interface Props {
    thresholds?: ThresholdsConfig;
    onChange: (thresholds: ThresholdsConfig) => void;
}
interface State {
    steps: ThresholdWithKey[];
}
interface ThresholdWithKey extends Threshold {
    key: number;
}
export declare class ThresholdsEditor extends PureComponent<Props, State> {
    constructor(props: Props);
    onAddThresholdAfter: (threshold: ThresholdWithKey) => void;
    onRemoveThreshold: (threshold: ThresholdWithKey) => void;
    onChangeThresholdValue: (event: React.ChangeEvent<HTMLInputElement>, threshold: ThresholdWithKey) => void;
    onChangeThresholdColor: (threshold: ThresholdWithKey, color: string) => void;
    onBlur: () => void;
    onChange: () => void;
    onModeChanged: (item: SelectableValue<ThresholdsMode>) => void;
    renderInput: (threshold: ThresholdWithKey) => JSX.Element;
    render(): JSX.Element;
}
export declare function thresholdsWithoutKey(thresholds: ThresholdsConfig | undefined, steps: ThresholdWithKey[]): ThresholdsConfig;
export {};
