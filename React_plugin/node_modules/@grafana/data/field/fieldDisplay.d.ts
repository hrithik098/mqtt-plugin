import { FieldConfig, DataFrame, DisplayValue, DisplayValueAlignmentFactors, FieldConfigSource, InterpolateFunction } from '../types';
import { DataFrameView } from '../dataframe/DataFrameView';
import { GraphSeriesValue } from '../types/graph';
import { GrafanaTheme } from '../types/theme';
export interface FieldDisplayOptions extends FieldConfigSource {
    values?: boolean;
    limit?: number;
    calcs: string[];
}
export declare const VAR_SERIES_NAME = "__series.name";
export declare const VAR_FIELD_NAME = "__field.name";
export declare const VAR_CALC = "__calc";
export declare const VAR_CELL_PREFIX = "__cell_";
export interface FieldDisplay {
    name: string;
    field: FieldConfig;
    display: DisplayValue;
    sparkline?: GraphSeriesValue[][];
    view?: DataFrameView;
    colIndex?: number;
    rowIndex?: number;
}
export interface GetFieldDisplayValuesOptions {
    data?: DataFrame[];
    fieldOptions: FieldDisplayOptions;
    replaceVariables: InterpolateFunction;
    sparkline?: boolean;
    theme: GrafanaTheme;
    autoMinMax?: boolean;
}
export declare const DEFAULT_FIELD_DISPLAY_VALUES_LIMIT = 25;
export declare const getFieldDisplayValues: (options: GetFieldDisplayValuesOptions) => FieldDisplay[];
export declare function getDisplayValueAlignmentFactors(values: FieldDisplay[]): DisplayValueAlignmentFactors;
