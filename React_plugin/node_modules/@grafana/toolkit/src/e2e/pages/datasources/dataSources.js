"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var pageInfo_1 = require("../../pageInfo");
var editDataSourcePage_1 = require("./editDataSourcePage");
var addDataSourcePage_1 = require("./addDataSourcePage");
var confirmModal_1 = require("../modals/confirmModal");
exports.dataSourcesPageFactory = function (testDataSourceName) {
    return new pageInfo_1.TestPage({
        url: '/datasources',
        pageObjects: {
            testData: "Data source list item for " + testDataSourceName,
        },
    });
};
exports.addTestDataSourceAndVerify = function (page) { return tslib_1.__awaiter(void 0, void 0, void 0, function () {
    var testDataSourceName, url, expectedUrl, selector, dataSourcesPage;
    return tslib_1.__generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                testDataSourceName = "e2e - TestData-" + new Date().getTime();
                return [4 /*yield*/, addDataSourcePage_1.addDataSourcePage.init(page)];
            case 1:
                _a.sent();
                return [4 /*yield*/, addDataSourcePage_1.addDataSourcePage.navigateTo()];
            case 2:
                _a.sent();
                return [4 /*yield*/, addDataSourcePage_1.addDataSourcePage.pageObjects.testDataDB.exists()];
            case 3:
                _a.sent();
                return [4 /*yield*/, addDataSourcePage_1.addDataSourcePage.pageObjects.testDataDB.click()];
            case 4:
                _a.sent();
                return [4 /*yield*/, editDataSourcePage_1.editDataSourcePage.init(page)];
            case 5:
                _a.sent();
                return [4 /*yield*/, editDataSourcePage_1.editDataSourcePage.waitForNavigation()];
            case 6:
                _a.sent();
                return [4 /*yield*/, editDataSourcePage_1.editDataSourcePage.pageObjects.name.enter(testDataSourceName)];
            case 7:
                _a.sent();
                return [4 /*yield*/, editDataSourcePage_1.editDataSourcePage.pageObjects.saveAndTest.click()];
            case 8:
                _a.sent();
                return [4 /*yield*/, editDataSourcePage_1.editDataSourcePage.pageObjects.alert.exists()];
            case 9:
                _a.sent();
                return [4 /*yield*/, editDataSourcePage_1.editDataSourcePage.pageObjects.alertMessage.containsText('Data source is working')];
            case 10:
                _a.sent();
                return [4 /*yield*/, editDataSourcePage_1.editDataSourcePage.getUrlWithoutBaseUrl()];
            case 11:
                url = _a.sent();
                expectedUrl = url.substring(1, url.length - 1);
                selector = "a[href=\"" + expectedUrl + "\"]";
                dataSourcesPage = exports.dataSourcesPageFactory(testDataSourceName);
                return [4 /*yield*/, dataSourcesPage.init(page)];
            case 12:
                _a.sent();
                return [4 /*yield*/, dataSourcesPage.navigateTo()];
            case 13:
                _a.sent();
                return [4 /*yield*/, dataSourcesPage.expectSelector({ selector: selector })];
            case 14:
                _a.sent();
                return [2 /*return*/, testDataSourceName];
        }
    });
}); };
exports.cleanUpTestDataSource = function (page, testDataSourceName) { return tslib_1.__awaiter(void 0, void 0, void 0, function () {
    var dataSourcesPage;
    return tslib_1.__generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                dataSourcesPage = exports.dataSourcesPageFactory(testDataSourceName);
                return [4 /*yield*/, dataSourcesPage.init(page)];
            case 1:
                _a.sent();
                return [4 /*yield*/, dataSourcesPage.navigateTo()];
            case 2:
                _a.sent();
                return [4 /*yield*/, dataSourcesPage.pageObjects.testData.click()];
            case 3:
                _a.sent();
                return [4 /*yield*/, editDataSourcePage_1.editDataSourcePage.init(page)];
            case 4:
                _a.sent();
                return [4 /*yield*/, editDataSourcePage_1.editDataSourcePage.pageObjects.delete.exists()];
            case 5:
                _a.sent();
                return [4 /*yield*/, editDataSourcePage_1.editDataSourcePage.pageObjects.delete.click()];
            case 6:
                _a.sent();
                return [4 /*yield*/, confirmModal_1.confirmModal.init(page)];
            case 7:
                _a.sent();
                return [4 /*yield*/, confirmModal_1.confirmModal.pageObjects.delete.click()];
            case 8:
                _a.sent();
                return [4 /*yield*/, confirmModal_1.confirmModal.pageObjects.success.exists()];
            case 9:
                _a.sent();
                return [2 /*return*/];
        }
    });
}); };
//# sourceMappingURL=dataSources.js.map